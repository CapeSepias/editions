# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# before_all do
#  ensure_git_branch
#  ensure_git_status_clean
#  git_pull
# end

platform :ios do
  lane :make_asc_key do
    encoded_api_key = ENV["ASC_API_KEY"]
    decoded_api_key = Base64.strict_decode64(encoded_api_key)
    path_to_api_key_file = "api_key.p8"
    File.open("../" + path_to_api_key_file, "w") { |f| f.write decoded_api_key }
    app_store_connect_api_key(
        key_id: ENV["ASC_API_KEY_ID"],
        issuer_id: ENV["ASC_API_KEY_ISSUER_ID"],
        key_filepath: path_to_api_key_file,
        duration: 1200, # optional
        in_house: false # optional but may be required if using match/sigh
    )
  end
    
  desc "Push a new beta build to TestFlight"
  lane :beta do

    create_keychain(
      name: "CI",
      password: ENV["FASTLANE_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    # Get the distribution certificate
    sync_code_signing(
      type: "appstore",
      readonly: true,
      git_url: "https://github.com/guardian/code-signing.git",
      keychain_name: "CI",
      keychain_password: ENV["FASTLANE_PASSWORD"]
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      path: "ios/Mallard.xcodeproj",
    )

    api_key = make_asc_key
      
    currentNumber = latest_testflight_build_number(api_key: api_key)
    increment_build_number(
      xcodeproj: "ios/Mallard.xcodeproj",
      build_number: currentNumber.to_i + 1
    )

    ENV["SPACESHIP_SKIP_2FA_UPGRADE"] = "1"
    ENV["FASTLANE_DISABLE_OUTPUT_FORMAT"] = "true"
    ENV["FASTLANE_HIDE_TIMESTAMP"] = "true"
    puts("::set-output name=buildnumber::#{latest_testflight_build_number.to_i + 1}")
    ENV["FASTLANE_DISABLE_OUTPUT_FORMAT"] = "false"
    ENV["FASTLANE_HIDE_TIMESTAMP"] = "false"


    build_app(
      scheme: "Mallard",
      workspace: "ios/Mallard.xcworkspace",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        exportOptionsPlist: "exports-plists/release.plist"
      }
    )
    upload_to_testflight(
        api_key: api_key,
        distribute_external: true,
        notify_external_testers: true,
        skip_waiting_for_build_processing: true,
        changelog: "Thanks for testing the app! We've made some improvements",
        groups: ["GNM"],
        demo_account_required: false,
        beta_app_review_info: {
            contact_email: "Editions.coreteam@guardian.co.uk",
            contact_first_name: "Editions",
            contact_last_name: "Team",
            contact_phone: "03303336767"
    },
    )
  end
end

platform :android do
  desc "Push a new internal testing build to Google Play"
  lane :beta do
    gradle(task: 'assemble',
           build_type: 'Release',
           project_dir: 'android/'
    )
    supply(
      track: 'internal',
      package_name: 'com.guardian.editions'
    )
  end
end

platform :android do
  desc "Push a new production build to Google Play's release track"
  lane :release_to_production do
    gradle(task: 'assemble',
           build_type: 'Release',
           project_dir: 'android/'
    )
    supply(
      track: 'production',
      package_name: 'com.guardian.editions'
    )
  end
end
